   1               		.file	"MIDI.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.MIDI_Device_ConfigureEndpoints,"ax",@progbits
  11               	.global	MIDI_Device_ConfigureEndpoints
  13               	MIDI_Device_ConfigureEndpoints:
  14               	.LVL0:
  15               	.LFB67:
  16               		.file 1 "LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c"
   1:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** /*
   2:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****              LUFA Library
   3:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****      Copyright (C) Dean Camera, 2010.
   4:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****               
   5:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****       www.fourwalledcubicle.com
   7:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** */
   8:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
   9:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** /*
  10:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  12:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   Permission to use, copy, modify, distribute, and sell this 
  13:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   without fee, provided that the above copyright notice appear in 
  15:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   all copies and that both that the copyright notice and this
  16:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   permission notice and warranty disclaimer appear in supporting 
  17:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   documentation, and that the name of the author not be used in 
  18:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   advertising or publicity pertaining to distribution of the 
  19:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   software without specific, written prior permission.
  20:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  21:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   The author disclaim all warranties with regard to this
  22:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   software, including all implied warranties of merchantability
  23:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   special, indirect or consequential damages or any damages
  25:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   arising out of or in connection with the use or performance of
  28:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****   this software.
  29:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** */
  30:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  31:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** #include "../../HighLevel/USBMode.h"
  33:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** #if defined(USB_CAN_BE_DEVICE)
  34:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  35:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** #define  __INCLUDE_FROM_MIDI_DRIVER
  36:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** #include "MIDI.h"
  37:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  38:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** bool MIDI_Device_ConfigureEndpoints(USB_ClassInfo_MIDI_Device_t* const MIDIInterfaceInfo)
  39:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** {
  17               		.loc 1 39 1 view -0
  18               		.cfi_startproc
  19               		.loc 1 39 1 is_stmt 0 view .LVU1
  20 0000 0F93      		push r16
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 16, -2
  24 0002 1F93      		push r17
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 17, -3
  28 0004 CF93      		push r28
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 28, -4
  32 0006 DF93      		push r29
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 29, -5
  36               	/* prologue: function */
  37               	/* frame size = 0 */
  38               	/* stack size = 4 */
  39               	.L__stack_usage = 4
  40 0008 EC01      		movw r28,r24
  40:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	memset(&MIDIInterfaceInfo->State, 0x00, sizeof(MIDIInterfaceInfo->State));
  41               		.loc 1 40 2 is_stmt 1 view .LVU2
  41:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  42:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (MIDIInterfaceInfo->Config.DataINEndpointNumber)
  42               		.loc 1 42 2 view .LVU3
  43               		.loc 1 42 31 is_stmt 0 view .LVU4
  44 000a 0981      		ldd r16,Y+1
  45               		.loc 1 42 5 view .LVU5
  46 000c 0111      		cpse r16,__zero_reg__
  47 000e 00C0      		rjmp .L2
  48               	.LVL1:
  49               	.L6:
  43:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	{
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		if (!(Endpoint_ConfigureEndpoint(MIDIInterfaceInfo->Config.DataINEndpointNumber, EP_TYPE_BULK,
  45:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_IN, MIDIInterfaceInfo->Config.DataINEndpointSize,
  46:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 MIDIInterfaceInfo->Config.DataINEndpointDoubleBank ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BAN
  47:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		{
  48:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 			return false;
  49:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		}
  50:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	}
  51:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  52:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (MIDIInterfaceInfo->Config.DataOUTEndpointNumber)
  50               		.loc 1 52 2 is_stmt 1 view .LVU6
  51               		.loc 1 52 31 is_stmt 0 view .LVU7
  52 0010 1D81      		ldd r17,Y+5
  53:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	{
  54:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		if (!(Endpoint_ConfigureEndpoint(MIDIInterfaceInfo->Config.DataOUTEndpointNumber, EP_TYPE_BULK,
  55:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_OUT, MIDIInterfaceInfo->Config.DataOUTEndpointSize,
  56:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 MIDIInterfaceInfo->Config.DataOUTEndpointDoubleBank ? ENDPOINT_BANK_DOUBLE : ENDPOINT_BA
  57:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		{
  58:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 			return false;
  59:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		}
  60:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	}
  61:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  62:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	return true;
  53               		.loc 1 62 9 view .LVU8
  54 0012 81E0      		ldi r24,lo8(1)
  52:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	{
  55               		.loc 1 52 5 view .LVU9
  56 0014 1123      		tst r17
  57 0016 01F0      		breq .L1
  54:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_OUT, MIDIInterfaceInfo->Config.DataOUTEndpointSize,
  58               		.loc 1 54 3 is_stmt 1 view .LVU10
  54:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_OUT, MIDIInterfaceInfo->Config.DataOUTEndpointSize,
  59               		.loc 1 54 9 is_stmt 0 view .LVU11
  60 0018 8E81      		ldd r24,Y+6
  61 001a 9F81      		ldd r25,Y+7
  62 001c 2885      		ldd r18,Y+8
  63 001e C0E0      		ldi r28,0
  64               	.LVL2:
  54:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_OUT, MIDIInterfaceInfo->Config.DataOUTEndpointSize,
  65               		.loc 1 54 9 view .LVU12
  66 0020 2111      		cpse r18,__zero_reg__
  67 0022 C4E0      		ldi r28,lo8(4)
  68               	.L7:
  69               	.LVL3:
  70               	.LBB41:
  71               	.LBI41:
  72               		.file 2 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h"
   1:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
   2:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****              LUFA Library
   3:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****      Copyright (C) Dean Camera, 2010.
   4:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****               
   5:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****       www.fourwalledcubicle.com
   7:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
   8:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
   9:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /*
  10:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  12:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   Permission to use, copy, modify, distribute, and sell this 
  13:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   without fee, provided that the above copyright notice appear in 
  15:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   all copies and that both that the copyright notice and this
  16:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   permission notice and warranty disclaimer appear in supporting 
  17:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   documentation, and that the name of the author not be used in 
  18:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   advertising or publicity pertaining to distribution of the 
  19:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software without specific, written prior permission.
  20:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  21:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   The author disclaim all warranties with regard to this
  22:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   software, including all implied warranties of merchantability
  23:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   special, indirect or consequential damages or any damages
  25:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   arising out of or in connection with the use or performance of
  28:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****   this software.
  29:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** */
  30:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  31:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \file
  32:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \brief USB device endpoint management definitions.
  33:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  34:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  This file contains structures, function prototypes and macros related to the management of the 
  35:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  data endpoints when the library is initialized in USB device mode.
  36:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  37:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  40:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  41:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_USB
  42:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointManagement Endpoint Management
  43:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  45:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  46:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  send/receive functions for various data types.
  47:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  48:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @{
  49:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  50:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  51:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointRW Endpoint Data Reading and Writing
  52:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  53:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  54:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  55:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  
  56:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  57:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointPrimitiveRW Read/Write of Primitive Data Types
  58:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  59:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  60:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  from and to endpoints.
  61:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  62:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  63:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** \ingroup Group_EndpointRW  
  64:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  @defgroup Group_EndpointStreamRW Read/Write of Multi-Byte Streams
  65:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  66:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of data strea
  67:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  and to endpoints.
  68:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */ 
  69:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  70:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** /** @defgroup Group_EndpointPacketManagement Endpoint Packet Management
  71:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *
  72:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  73:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h ****  */
  74:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  75:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #ifndef __ENDPOINT_H__
  76:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** #define __ENDPOINT_H__
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  78:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Includes: */
  79:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/io.h>
  80:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/pgmspace.h>
  81:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <avr/eeprom.h>
  82:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include <stdbool.h>
  83:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  84:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../../../Common/Common.h"
  85:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "../HighLevel/USBTask.h"
  86:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#include "USBInterrupt.h"
  87:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  88:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
  89:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#include "../HighLevel/StreamCallbacks.h"
  90:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  91:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
  92:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Enable C linkage for C++ Compilers: */
  93:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if defined(__cplusplus)
  94:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			extern "C" {
  95:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
  96:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
  97:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Preprocessor Checks: */
  98:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  99:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
 100:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		#endif
 101:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 102:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Public Interface - May be used in end-application: */
 103:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
 104:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 105:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the OUT direction - i.e. data flows from host to device.
 106:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 107:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_OUT                      (0 << EPDIR)
 108:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 109:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint data direction mask for \ref Endpoint_ConfigureEndpoint(). This indicates that the 
 110:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  should be initialized in the IN direction - i.e. data flows from device to host.
 111:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 112:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DIR_IN                       (1 << EPDIR)
 113:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 114:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 115:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have one single bank, which requires less USB FIFO memory but resul
 116:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in slower transfers as only one USB device (the AVR or the host) can access the endpoint's
 117:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank at the one time.
 118:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 119:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_SINGLE                  (0 << EPBK0)
 120:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 121:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Mask for the bank mode selection for the \ref Endpoint_ConfigureEndpoint() macro. This indic
 122:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  that the endpoint should have two banks, which requires more USB FIFO memory but results
 123:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in faster transfers as one USB device (the AVR or the host) can access one bank while the ot
 124:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  accesses the second bank.
 125:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 126:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_BANK_DOUBLE                  (1 << EPBK0)
 127:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 128:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint address for the default control endpoint, which always resides in address 0. This i
 129:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  defined for convenience to give more readable code when used with the endpoint macros.
 130:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 131:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_CONTROLEP                    0
 132:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 133:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 134:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 135:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 *  value in the device descriptor. Not available if the FIXED_CONTROL_ENDPOINT_SIZE token is d
 136:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				 */
 137:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE   8
 138:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 139:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 140:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint number mask, for masking against endpoint addresses to retrieve the endpoint's
 141:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  numerical address in the device.
 142:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 143:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPNUM_MASK                   0x07
 144:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 145:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint direction mask, for masking against endpoint addresses to retrieve the endpoint's
 146:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction for comparing with the ENDPOINT_DESCRIPTOR_DIR_* masks.
 147:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 148:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPDIR_MASK                   0x80
 149:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 150:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Endpoint bank size mask, for masking against endpoint addresses to retrieve the endpoint's
 151:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank size in the device.
 152:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 153:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_EPSIZE_MASK                  0x7F
 154:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 155:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Maximum size in bytes of a given endpoint.
 156:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 157:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 158:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 159:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_MAX_SIZE(n)                  _ENDPOINT_GET_MAXSIZE(n)
 160:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 161:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates if the given endpoint supports double banking.
 162:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 163:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] n  Endpoint number, a value between 0 and (ENDPOINT_TOTAL_ENDPOINTS - 1)
 164:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */				
 165:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define ENDPOINT_DOUBLEBANK_SUPPORTED(n)      _ENDPOINT_GET_DOUBLEBANK(n)
 166:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 167:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(CONTROL_ONLY_DEVICE)
 168:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 169:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 170:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 171:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 172:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					 */
 173:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      7
 174:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 175:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS      5
 176:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 177:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 178:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS          1
 179:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 180:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 181:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Enums: */
 182:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 183:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 184:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 185:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 186:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 187:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 188:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 189:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 190:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   transfer by the host or device.
 191:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 192:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 193:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   waiting for the endpoint to become ready.
 194:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 195:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 196:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   no USB endpoint traffic can occur until th
 197:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   has resumed.
 198:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 199:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 200:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   within the software timeout period set by 
 201:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 202:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                                 */
 203:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 204:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 205:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Stream_* functions.
 206:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 207:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 208:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 209:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_Stream_RW_ErrorCodes_t
 210:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 211:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 212:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_EndpointStalled    = 1, /**< The endpoint was stalled during the stream
 213:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   transfer by the host or device.
 214:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 215:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 216:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   the transfer.
 217:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 218:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 219:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   no USB endpoint traffic can occur until the bus
 220:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   has resumed.
 221:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 222:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_Timeout            = 4, /**< The host failed to accept or send the next packe
 223:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   within the software timeout period set by the
 224:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           *   \ref USB_STREAM_TIMEOUT_MS macro.
 225:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 226:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWSTREAM_CallbackAborted    = 5, /**< Indicates that the stream's callback function
 227:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                               *   aborted the transfer early.
 228:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                           */
 229:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 230:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 231:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enum for the possible error return codes of the Endpoint_*_Control_Stream_* functions..
 232:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 233:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 234:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 235:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			enum Endpoint_ControlStream_RW_ErrorCodes_t
 236:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 237:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_NoError            = 0, /**< Command completed successfully, no error. */
 238:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_HostAborted        = 1, /**< The aborted the transfer prematurely. */
 239:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_DeviceDisconnected = 2, /**< Device was disconnected from the host during
 240:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   the transfer.
 241:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 242:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				ENDPOINT_RWCSTREAM_BusSuspended       = 3, /**< The USB bus has been suspended by the host and
 243:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   no USB endpoint traffic can occur until the bus
 244:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            *   has resumed.
 245:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                            */
 246:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			};
 247:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 248:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
 249:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 250:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 251:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The return width of this function may differ, depending on the maximum endpoint bank s
 252:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        of the selected AVR model.
 253:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 254:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 255:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 256:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 257:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 258:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 259:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 260:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 261:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 262:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCX;
 263:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_4_AVR)
 264:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 265:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#elif defined(USB_SERIES_2_AVR)
 266:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return UEBCLX;
 267:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 268:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 269:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 270:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 271:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint number so that it can be restored after another endpoint has
 272:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  been manipulated.
 273:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 274:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Index of the currently selected endpoint.
 275:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 276:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 277:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 278:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 279:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 280:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return (UENUM & ENDPOINT_EPNUM_MASK);
 281:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 282:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					return ENDPOINT_CONTROLEP;
 283:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 284:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 285:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 286:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Selects the given endpoint number. If the address from the device descriptors is used, the
 287:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  value should be masked with the \ref ENDPOINT_EPNUM_MASK constant to extract only the endpoi
 288:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  number (and discarding the endpoint direction bit).
 289:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 290:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  Any endpoint operations which do not require the endpoint number to be indicated will operat
 291:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the currently selected endpoint.
 292:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 293:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number to select.
 294:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 295:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 296:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t EndpointNumber)
 297:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 298:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UENUM = EndpointNumber;
 300:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 301:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 302:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 303:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 304:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  In and Out pointers to the bank's contents.
 305:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 306:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber Endpoint number whose FIFO buffers are to be reset.
 307:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 308:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber) ATTR_ALWAYS_INLINE;
 309:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetFIFO(const uint8_t EndpointNumber)
 310:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 311:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = (1 << EndpointNumber);
 312:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UERST = 0;
 313:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 314:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 315:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 316:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and from a host.
 317:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 318:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 319:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 320:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 321:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_EnableEndpoint(void)
 322:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 323:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << EPEN);
 324:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 325:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 326:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 327:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to and from a host.
 328:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 329:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 330:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_DisableEndpoint(void)
 331:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 332:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX &= ~(1 << EPEN);
 333:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 334:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 335:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 336:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 337:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 * \return Boolean True if the currently selected endpoint is enabled, false otherwise.
 338:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 339:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 340:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsEnabled(void)
 341:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 342:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 343:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 344:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 346:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 347:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 348:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 349:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction and the endpoint bank is full.
 350:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 351:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 352:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 353:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint may be read from or written to, depe
 354:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 355:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 356:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 357:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 359:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 360:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 361:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is configured.
 362:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 363:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint has been configured, false otherwise
 364:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 365:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 366:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsConfigured(void)
 367:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 368:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 369:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 370:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 371:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 372:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 373:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  masking the return value against (1 << {Endpoint Number}).
 374:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 375:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 376:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 377:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 378:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 379:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 380:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEINT;
 381:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 382:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 383:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 384:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoints).
 385:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 386:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] EndpointNumber  Index of the endpoint whose interrupt flag should be tested.
 387:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 388:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the specified endpoint has interrupted, false otherwise.
 389:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 390:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber) ATTR_WARN_UNUSE
 391:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t EndpointNumber)
 392:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 393:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINT & (1 << EndpointNumber)) ? true : false);
 394:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 395:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 396:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected IN endpoint is ready for a new packet.
 397:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 398:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 399:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 400:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the current endpoint is ready for an IN packet, false otherwise.
 401:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 402:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 403:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsINReady(void)
 404:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 405:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << TXINI))  ? true : false);
 406:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 407:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 408:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the selected OUT endpoint has received new packet.
 409:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 410:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 411:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 412:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if current endpoint is has received an OUT packet, false otherwise.
 413:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 414:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 415:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 416:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 417:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 418:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 419:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 420:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 421:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 422:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 423:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 424:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the selected endpoint has received a SETUP packet, false otherwise.
 425:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 426:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 427:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 428:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 429:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 430:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 431:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 432:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 433:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint for the next packet.
 434:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 435:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 436:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 437:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This is not applicable for non CONTROL type endpoints. 
 438:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 439:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 440:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearSETUP(void)
 441:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 442:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEINTX &= ~(1 << RXSTPI);
 443:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 444:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 445:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 446:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 447:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 448:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 449:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 450:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 451:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearIN(void)
 452:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 453:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 454:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 455:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 456:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << TXINI);
 457:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 458:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 459:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 460:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 461:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 462:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 463:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 464:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 465:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 466:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearOUT(void)
 467:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 468:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 469:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 470:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 471:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					UEINTX &= ~(1 << RXOUTI);	
 472:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 473:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 474:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 475:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 476:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 477:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 478:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborted and the host can begin its own recovery sequence.
 479:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 480:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 481:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 482:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint.
 483:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 484:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 485:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 486:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 487:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_StallTransaction(void)
 488:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 489:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQ);
 490:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 491:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 492:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 493:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 494:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 495:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 496:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 497:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ClearStall(void)
 498:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 499:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << STALLRQC);
 500:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 501:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 502:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines if the currently selected endpoint is stalled, false otherwise.
 503:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 504:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPacketManagement
 505:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 506:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the currently selected endpoint is stalled, false otherwise.
 507:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 508:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 509:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_IsStalled(void)
 510:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 511:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 512:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 513:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 514:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 515:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 516:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_ResetDataToggle(void)
 517:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 518:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECONX |= (1 << RSTDT);
 519:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 520:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 521:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Determines the currently selected endpoint's direction.
 522:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 523:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return The currently selected endpoint's direction, as a ENDPOINT_DIR_* mask.
 524:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 525:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 526:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 527:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 528:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (UECFG0X & ENDPOINT_DIR_IN);
 529:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 530:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 531:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Sets the direction of the currently selected endpoint.
 532:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 533:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a ENDPOINT_DIR_* mask.
 534:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 535:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 536:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 537:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 538:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UECFG0X = ((UECFG0X & ~ENDPOINT_DIR_IN) | DirectionMask);
 539:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 540:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 541:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 542:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 543:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 544:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 545:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 546:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 547:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 548:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_Read_Byte(void)
 549:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 550:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return UEDATX;
 551:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 552:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 553:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes one byte from the currently selected endpoint's bank, for IN direction endpoints.
 554:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 555:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 556:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 557:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Byte  Next byte to write into the the currently selected endpoint's FIFO buffer.
 558:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 559:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte) ATTR_ALWAYS_INLINE;
 560:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Byte(const uint8_t Byte)
 561:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 562:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = Byte;
 563:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 564:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 565:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 566:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 567:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 568:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 569:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void) ATTR_ALWAYS_INLINE;
 570:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Byte(void)
 571:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 572:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 573:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 574:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 575:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 576:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 577:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in little endian format, for OUT
 578:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 579:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 580:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 581:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 582:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 583:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 584:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 585:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_LE(void)
 586:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 587:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 588:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 589:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 590:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 591:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 592:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 593:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 594:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 595:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 596:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 597:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 598:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 599:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads two bytes from the currently selected endpoint's bank in big endian format, for OUT
 600:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 601:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 602:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 603:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 604:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next word in the currently selected endpoint's FIFO buffer.
 605:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 606:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 607:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint16_t Endpoint_Read_Word_BE(void)
 608:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 609:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 610:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 611:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint16_t Word;
 612:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[2];
 613:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 614:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 615:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 616:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 617:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 618:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.Word;
 619:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 620:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 621:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in little endian format, for IN
 622:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 623:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 624:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 625:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 626:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 627:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 628:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 629:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_LE(const uint16_t Word)
 630:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 631:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 632:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 633:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 634:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 635:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes two bytes to the currently selected endpoint's bank in big endian format, for IN
 636:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 637:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 638:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 639:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 640:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Word  Next word to write to the currently selected endpoint's FIFO buffer.
 641:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 642:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word) ATTR_ALWAYS_INLINE;
 643:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_Word_BE(const uint16_t Word)
 644:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 645:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word >> 8);
 646:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (Word & 0xFF);
 647:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 648:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 649:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards two bytes from the currently selected endpoint's bank, for OUT direction endpoints.
 650:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 651:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 652:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 653:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void) ATTR_ALWAYS_INLINE;
 654:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_Word(void)
 655:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 656:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 657:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 658:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 659:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 660:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 661:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 662:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in little endian format, for OU
 663:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 664:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 665:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 666:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 667:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 668:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 669:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 670:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_LE(void)
 671:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 672:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 673:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 674:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 675:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 676:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 677:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 678:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 679:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 680:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 681:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 682:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 683:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 684:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 685:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 686:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads four bytes from the currently selected endpoint's bank in big endian format, for OUT
 687:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 688:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 689:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 690:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 691:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Next double word in the currently selected endpoint's FIFO buffer.
 692:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 693:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 694:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint32_t Endpoint_Read_DWord_BE(void)
 695:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 696:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				union
 697:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
 698:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint32_t DWord;
 699:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					uint8_t  Bytes[4];
 700:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				} Data;
 701:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 702:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[3] = UEDATX;
 703:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[2] = UEDATX;
 704:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[1] = UEDATX;
 705:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Data.Bytes[0] = UEDATX;
 706:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 707:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Data.DWord;
 708:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 709:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 710:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in little endian format, for IN
 711:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 712:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 713:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 714:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 715:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 716:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 717:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 718:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_LE(const uint32_t DWord)
 719:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 720:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 721:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 722:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 723:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 724:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 725:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 726:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes four bytes to the currently selected endpoint's bank in big endian format, for IN
 727:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  direction endpoints.
 728:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 729:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 730:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 731:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] DWord  Next double word to write to the currently selected endpoint's FIFO buffer
 732:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 733:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord) ATTR_ALWAYS_INLINE;
 734:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Write_DWord_BE(const uint32_t DWord)
 735:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 736:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 24);
 737:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 16);
 738:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord >> 8);
 739:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				UEDATX = (DWord &  0xFF);
 740:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 741:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 742:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Discards four bytes from the currently selected endpoint's bank, for OUT direction endpoints
 743:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 744:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointPrimitiveRW
 745:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 746:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void) ATTR_ALWAYS_INLINE;
 747:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline void Endpoint_Discard_DWord(void)
 748:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 749:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t Dummy;
 750:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
 751:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 752:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 753:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 754:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				Dummy = UEDATX;
 755:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 756:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 757:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* External Variables: */
 758:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Global indicating the maximum packet size of the default control endpoint located at address
 759:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  0 in the device. This value is set to the value indicated in the device descriptor in the us
 760:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  project once the USB interface is initialized into device mode.
 761:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 762:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If space is an issue, it is possible to fix this to a static value by defining the control
 763:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint size in the FIXED_CONTROL_ENDPOINT_SIZE token passed to the compiler in the makefil
 764:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  via the -D switch. When a fixed control endpoint size is used, the size is no longer dynamic
 765:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  read from the descriptors at runtime and instead fixed to the given value. When used, it is
 766:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  important that the descriptor control endpoint size value matches the size given as the
 767:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  FIXED_CONTROL_ENDPOINT_SIZE token - it is recommended that the FIXED_CONTROL_ENDPOINT_SIZE t
 768:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  be used in the descriptors to ensure this.
 769:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 770:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This variable should be treated as read-only in the user application, and never manual
 771:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        changed in value.
 772:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 773:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 774:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				extern uint8_t USB_ControlEndpointSize;
 775:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 776:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define USB_ControlEndpointSize FIXED_CONTROL_ENDPOINT_SIZE
 777:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 778:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 779:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
 780:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if !defined(NO_STREAM_CALLBACKS) || defined(__DOXYGEN__)
 781:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM     , StreamCallbackPtr_t Callback
 782:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
 783:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define __CALLBACK_PARAM
 784:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
 785:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		
 786:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Configures the specified endpoint number with the given endpoint type, direction, bank size
 787:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  and banking mode. Endpoints should be allocated in ascending order by their address in the
 788:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  device (i.e. endpoint 1 should be configured before endpoint 2 and so on) to prevent fragmen
 789:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  of the USB FIFO memory.
 790:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 791:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The endpoint type may be one of the EP_TYPE_* macros listed in LowLevel.h and the direction
 792:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  may be either \ref ENDPOINT_DIR_OUT or \ref ENDPOINT_DIR_IN.
 793:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 794:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The bank size must indicate the maximum packet size that the endpoint can handle. Different
 795:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  endpoint numbers can handle different maximum packet sizes - refer to the chosen USB AVR's
 796:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  datasheet to determine the maximum bank size for each endpoint.
 797:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 798:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  The banking mode may be either \ref ENDPOINT_BANK_SINGLE or \ref ENDPOINT_BANK_DOUBLE.
 799:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 800:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 801:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        it is automatically configured by the library internally.
 802:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
 803:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 804:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine will select the specified endpoint, and the endpoint will remain selected
 805:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        once the routine completes regardless of if the endpoint configuration succeeds.
 806:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 807:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return Boolean true if the configuration succeeded, false otherwise.
 808:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 809:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool Endpoint_ConfigureEndpoint(const uint8_t  Number,
 810:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Type,
 811:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Direction,
 812:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint16_t Size,
 813:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                const uint8_t Banks);
 814:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 815:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Spin-loops until the currently selected non-control endpoint is ready for the next packet of
 816:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  to be read or written to it.
 817:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 818:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be called on CONTROL type endpoints.
 819:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 820:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointRW
 821:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 822:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_WaitUntilReady_ErrorCodes_t enum.
 823:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 824:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_WaitUntilReady(void);
 825:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 826:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Completes the status stage of a control transfer on a CONTROL type endpoint automatically,
 827:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  with respect to the data direction. This is a convenience function which can be used to
 828:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  simplify user control request handling.
 829:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 830:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void Endpoint_ClearStatusStage(void);
 831:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 832:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads and discards the given number of bytes from the endpoint from the given buffer,
 833:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 834:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 835:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 836:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the next
 837:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  packet is ready, allowing for early aborts of stream transfers.
 838:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 839:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 840:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 841:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 842:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 843:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 844:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 845:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 846:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 847:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to send via the currently selected endpoint.
 848:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 849:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 850:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 851:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 852:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Discard_Stream(uint16_t Length
 853:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM);
 854:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 855:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in little endian,
 856:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 857:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 858:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 859:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 860:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 861:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 862:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 863:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 864:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 865:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 866:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 867:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 868:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 869:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 870:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 871:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 872:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 873:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 874:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 875:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 876:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_LE(const void* Buffer,
 877:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 878:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 879:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 880:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_LE().
 881:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 882:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 883:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 884:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 885:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 886:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 887:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 888:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 889:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 890:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_LE(const void* Buffer,
 891:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 892:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 893:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 894:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_LE().
 895:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 896:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 897:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 898:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 899:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 900:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 901:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 902:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 903:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 904:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 905:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 906:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_LE(const void* Buffer,
 907:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 908:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 909:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 910:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the endpoint from the given buffer in big endian,
 911:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The last packet filled is not automatically sent
 912:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  the user is responsible for manually sending the last written packet to the host via the
 913:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ref Endpoint_ClearIN() macro. Between each USB packet, the given stream callback function
 914:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is executed repeatedly until the endpoint is ready to accept the next packet, allowing for e
 915:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  aborts of stream transfers.
 916:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 917:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 918:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 919:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 920:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 921:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 922:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 923:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 924:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 925:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 926:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 927:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 928:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 929:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 930:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 931:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Stream_BE(const void* Buffer,
 932:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
 933:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 934:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 935:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Stream_BE().
 936:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 937:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 938:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 939:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 940:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 941:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 942:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 943:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 944:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 945:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_EStream_BE(const void* Buffer,
 946:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 947:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 948:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 949:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Stream_BE().
 950:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 951:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
 952:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 953:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 954:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 955:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer    Pointer to the source data buffer to read from.
 956:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length    Number of bytes to read for the currently selected endpoint into the bu
 957:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Callback  Name of a callback routine to call between successive USB packet transf
 958:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 959:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 960:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 961:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_PStream_BE(const void* Buffer,
 962:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  uint16_t Length
 963:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                  __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 964:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 965:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in little endian,
 966:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
 967:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
 968:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
 969:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
 970:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
 971:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 972:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
 973:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
 974:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
 975:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 976:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
 977:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 978:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 979:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 980:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
 981:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 982:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 983:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 984:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 985:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
 986:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_LE(void* Buffer,
 987:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
 988:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
 989:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
 990:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_LE().
 991:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 992:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
 993:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 994:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
 995:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
 996:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
 997:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
 998:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
 999:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1000:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_LE(void* Buffer,
1001:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1002:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1003:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1004:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the endpoint from the given buffer in big endian,
1005:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The last packet is not automatically
1006:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarded once the remaining bytes has been read; the user is responsible for manually
1007:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding the last packet from the host via the \ref Endpoint_ClearOUT() macro. Between
1008:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  each USB packet, the given stream callback function is executed repeatedly until the endpoin
1009:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  is ready to accept the next packet, allowing for early aborts of stream transfers.
1010:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1011:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *	The callback routine should be created according to the information in \ref Group_StreamCallb
1012:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  If the token NO_STREAM_CALLBACKS is passed via the -D option to the compiler, stream callbac
1013:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  disabled and this function has the Callback parameter omitted.
1014:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1015:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should not be used on CONTROL type endpoints.
1016:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1017:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1018:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1019:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to.
1020:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1021:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1022:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1023:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1024:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1025:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Stream_BE(void* Buffer,
1026:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                uint16_t Length
1027:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1028:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1029:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Stream_BE().
1030:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1031:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1032:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1033:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer    Pointer to the destination data buffer to write to, located in EEPROM 
1034:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length    Number of bytes to send via the currently selected endpoint.
1035:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Callback  Name of a callback routine to call between successive USB packet trans
1036:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1037:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_Stream_RW_ErrorCodes_t enum.
1038:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1039:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_EStream_BE(void* Buffer,
1040:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 uint16_t Length
1041:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                 __CALLBACK_PARAM) ATTR_NON_NULL_PTR_ARG(1);
1042:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1043:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in littl
1044:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1045:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1046:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1047:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1048:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1049:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1050:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1051:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1052:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1053:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1054:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1055:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1056:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1057:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1058:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1059:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1060:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1061:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1062:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1063:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1064:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_LE(const void* Buffer,
1065:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1066:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1067:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of Endpoint_Write_Control_Stream_LE.
1068:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1069:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1070:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1071:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1072:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1073:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1074:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1075:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1076:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1077:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1078:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1079:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1080:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1081:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1082:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1083:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1084:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1085:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_LE(const void* Buffer,
1086:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1087:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1088:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_LE().
1089:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1090:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1091:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1092:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1093:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1094:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1095:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1096:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1097:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1098:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1099:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1100:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1101:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1102:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1103:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1104:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1105:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1106:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1107:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1108:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_LE(const void* Buffer,
1109:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1110:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1111:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Writes the given number of bytes to the CONTROL type endpoint from the given buffer in big e
1112:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  sending full packets to the host as needed. The host OUT acknowledgement is not automaticall
1113:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  in both failure and success states; the user is responsible for manually clearing the setup 
1114:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  finalize the transfer via the \ref Endpoint_ClearOUT() macro.
1115:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1116:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1117:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1118:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1119:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1120:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1121:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1122:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1123:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1124:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1125:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1126:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1127:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1128:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1129:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1130:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1131:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1132:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_Stream_BE(const void* Buffer,
1133:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1134:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1135:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1136:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1137:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1138:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1139:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1140:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1141:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1142:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1143:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1144:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1145:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1146:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1147:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1148:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1149:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1150:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1151:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1152:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1153:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_EStream_BE(const void* Buffer,
1154:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1155:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1156:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** FLASH buffer source version of \ref Endpoint_Write_Control_Stream_BE().
1157:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1158:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \pre The FLASH data must be located in the first 64KB of FLASH for this function to work cor
1159:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1160:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1161:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1162:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1163:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1164:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1165:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1166:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1167:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1168:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1169:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1170:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1171:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Buffer  Pointer to the source data buffer to read from.
1172:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in] Length  Number of bytes to read for the currently selected endpoint into the buff
1173:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1174:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1175:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1176:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Write_Control_PStream_BE(const void* Buffer,
1177:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                          uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1178:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1179:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in little en
1180:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1181:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1182:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1183:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1184:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1185:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1186:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1187:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1188:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1189:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1190:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1191:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1192:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1193:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1194:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1195:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1196:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1197:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1198:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1199:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1200:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_LE(void* Buffer,
1201:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1202:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1203:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_LE().
1204:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1205:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1206:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1207:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1208:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1209:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1210:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1211:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1212:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1213:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1214:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1215:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1216:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1217:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1218:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1219:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1220:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1221:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_LE(void* Buffer,
1222:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1223:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1224:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** Reads the given number of bytes from the CONTROL endpoint from the given buffer in big endia
1225:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  discarding fully read packets from the host as needed. The device IN acknowledgement is not
1226:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  automatically sent after success or failure states; the user is responsible for manually sen
1227:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  setup IN to finalize the transfer via the \ref Endpoint_ClearIN() macro.
1228:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1229:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1230:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1231:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1232:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1233:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1234:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1235:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1236:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1237:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1238:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1239:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1240:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1241:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1242:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1243:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1244:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1245:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_Stream_BE(void* Buffer,
1246:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                        uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1247:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1248:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			/** EEPROM buffer source version of \ref Endpoint_Read_Control_Stream_BE().
1249:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1250:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This function automatically clears the control transfer's status stage. Do not manuall
1251:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        to clear the status stage when using this routine in a control transaction.
1252:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *        \n\n
1253:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1254:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \note This routine should only be used on CONTROL type endpoints.
1255:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1256:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \warning Unlike the standard stream read/write commands, the control stream commands cannot 
1257:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *           together; i.e. the entire stream data must be read or written at the one time.
1258:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1259:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \ingroup Group_EndpointStreamRW
1260:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1261:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[out] Buffer  Pointer to the destination data buffer to write to.
1262:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \param[in]  Length  Number of bytes to send via the currently selected endpoint.
1263:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *
1264:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 *  \return A value from the \ref Endpoint_ControlStream_RW_ErrorCodes_t enum.
1265:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			 */
1266:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_Read_Control_EStream_BE(void* Buffer,
1267:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                         uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
1268:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1269:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	/* Private Interface - For use in library only: */
1270:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 	#if !defined(__DOXYGEN__)
1271:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Macros: */
1272:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE(n)               _ENDPOINT_GET_MAXSIZE2(ENDPOINT_DETAILS_EP ## n)
1273:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE2(details)        _ENDPOINT_GET_MAXSIZE3(details)
1274:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_MAXSIZE3(maxsize, db)    maxsize
1275:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1276:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK(n)            _ENDPOINT_GET_DOUBLEBANK2(ENDPOINT_DETAILS_EP ## 
1277:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK2(details)     _ENDPOINT_GET_DOUBLEBANK3(details)
1278:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define _ENDPOINT_GET_DOUBLEBANK3(maxsize, db) db
1279:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1280:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
1281:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1282:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               256, true
1283:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  true
1284:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1285:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true
1286:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP5               64,  true
1287:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP6               64,  true
1288:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#else
1289:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP0               64,  true
1290:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP1               64,  false
1291:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP2               64,  false
1292:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP3               64,  true
1293:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#define ENDPOINT_DETAILS_EP4               64,  true			
1294:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#endif
1295:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1296:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			#define Endpoint_ConfigureEndpoint(Number, Type, Direction, Size, Banks)                        
1297:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                     (__builtin_constant_p(Size) ? Endpoint_ConfigureEndpointStatic((Number),   
1298:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Type),     
1299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    (Direction),
1300:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                    Size, Banks)
1301:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                   Endpoint_ConfigureEndpointDynamic((Number),  
1302:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Type),    
1303:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     (Direction)
1304:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                                                     Size, Banks
1305:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1306:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Function Prototypes: */
1307:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			void    Endpoint_ClearEndpoints(void);
1308:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			uint8_t Endpoint_BytesToEPSizeMaskDynamic(const uint16_t Size);
1309:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			bool    Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
1310:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG0XData,
1311:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                       const uint8_t UECFG1XData);			
1312:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1313:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 		/* Inline Functions: */
1314:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
1315:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
1316:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1317:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint8_t  MaskVal    = 0;
1318:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				uint16_t CheckBytes = 8;
1319:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1320:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				while (CheckBytes < Bytes)
1321:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				{
1322:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					MaskVal++;
1323:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 					CheckBytes <<= 1;
1324:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				}
1325:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				
1326:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return (MaskVal << EPSIZE0);
1327:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1328:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
1329:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointStatic(const uint8_t Number,
1330:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Type,
1331:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Direction,
1332:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint16_t Size,
1333:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                    const uint8_t Banks)
1334:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1335:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
1336:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMask(Size))
1337:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
1338:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 
1339:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			static inline bool Endpoint_ConfigureEndpointDynamic(const uint8_t Number,
  73               		.loc 2 1339 23 is_stmt 1 discriminator 11 view .LVU13
  74               	.LBB42:
1340:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Type,
1341:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Direction,
1342:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint16_t Size,
1343:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Banks)
1344:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number, (((Type) << EPTYPE0) | (Direction)),
  75               		.loc 2 1345 5 discriminator 11 view .LVU14
1346:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
  76               		.loc 2 1346 67 is_stmt 0 discriminator 11 view .LVU15
  77 0024 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
  78               	.LVL4:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
  79               		.loc 2 1345 12 discriminator 11 view .LVU16
  80 0028 4C2F      		mov r20,r28
  81 002a 482B      		or r20,r24
  82 002c 4260      		ori r20,lo8(2)
  83 002e 60E8      		ldi r22,lo8(-128)
  84 0030 812F      		mov r24,r17
  85               	/* epilogue start */
  86               	.LBE42:
  87               	.LBE41:
  63:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** }
  88               		.loc 1 63 1 discriminator 11 view .LVU17
  89 0032 DF91      		pop r29
  90 0034 CF91      		pop r28
  91               	.LVL5:
  92               		.loc 1 63 1 discriminator 11 view .LVU18
  93 0036 1F91      		pop r17
  94               	.LVL6:
  95               		.loc 1 63 1 discriminator 11 view .LVU19
  96 0038 0F91      		pop r16
  97               	.LBB44:
  98               	.LBB43:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
  99               		.loc 2 1345 12 discriminator 11 view .LVU20
 100 003a 0C94 0000 		jmp Endpoint_ConfigureEndpoint_Prv
 101               	.LVL7:
 102               	.L2:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 103               		.loc 2 1345 12 discriminator 11 view .LVU21
 104               	.LBE43:
 105               	.LBE44:
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_IN, MIDIInterfaceInfo->Config.DataINEndpointSize,
 106               		.loc 1 44 3 is_stmt 1 view .LVU22
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_IN, MIDIInterfaceInfo->Config.DataINEndpointSize,
 107               		.loc 1 44 9 is_stmt 0 view .LVU23
 108 003e 8A81      		ldd r24,Y+2
 109 0040 9B81      		ldd r25,Y+3
 110               	.LVL8:
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_IN, MIDIInterfaceInfo->Config.DataINEndpointSize,
 111               		.loc 1 44 9 view .LVU24
 112 0042 2C81      		ldd r18,Y+4
 113 0044 10E0      		ldi r17,0
 114 0046 2111      		cpse r18,__zero_reg__
 115 0048 14E0      		ldi r17,lo8(4)
 116               	.L5:
 117               	.LVL9:
 118               	.LBB45:
 119               	.LBI45:
1339:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			                                                     const uint8_t Type,
 120               		.loc 2 1339 23 is_stmt 1 discriminator 11 view .LVU25
 121               	.LBB46:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 122               		.loc 2 1345 5 discriminator 11 view .LVU26
 123               		.loc 2 1346 67 is_stmt 0 discriminator 11 view .LVU27
 124 004a 0E94 0000 		call Endpoint_BytesToEPSizeMaskDynamic
 125               	.LVL10:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 126               		.loc 2 1345 12 discriminator 11 view .LVU28
 127 004e 412F      		mov r20,r17
 128 0050 482B      		or r20,r24
 129 0052 4260      		ori r20,lo8(2)
 130 0054 61E8      		ldi r22,lo8(-127)
 131 0056 802F      		mov r24,r16
 132 0058 0E94 0000 		call Endpoint_ConfigureEndpoint_Prv
 133               	.LVL11:
1345:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				                                      ((1 << ALLOC) | Banks | Endpoint_BytesToEPSizeMaskDynamic
 134               		.loc 2 1345 12 discriminator 11 view .LVU29
 135               	.LBE46:
 136               	.LBE45:
  44:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 										 ENDPOINT_DIR_IN, MIDIInterfaceInfo->Config.DataINEndpointSize,
 137               		.loc 1 44 6 discriminator 11 view .LVU30
 138 005c 8111      		cpse r24,__zero_reg__
 139 005e 00C0      		rjmp .L6
 140               	.L1:
 141               	/* epilogue start */
 142               		.loc 1 63 1 view .LVU31
 143 0060 DF91      		pop r29
 144 0062 CF91      		pop r28
 145               	.LVL12:
 146               		.loc 1 63 1 view .LVU32
 147 0064 1F91      		pop r17
 148 0066 0F91      		pop r16
 149 0068 0895      		ret
 150               		.cfi_endproc
 151               	.LFE67:
 153               		.section	.text.MIDI_Device_SendEventPacket,"ax",@progbits
 154               	.global	MIDI_Device_SendEventPacket
 156               	MIDI_Device_SendEventPacket:
 157               	.LVL13:
 158               	.LFB68:
  64:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  65:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** uint8_t MIDI_Device_SendEventPacket(USB_ClassInfo_MIDI_Device_t* const MIDIInterfaceInfo,
  66:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****                                     const MIDI_EventPacket_t* const Event)
  67:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** {
 159               		.loc 1 67 1 is_stmt 1 view -0
 160               		.cfi_startproc
 161               	/* prologue: function */
 162               	/* frame size = 0 */
 163               	/* stack size = 0 */
 164               	.L__stack_usage = 0
 165               		.loc 1 67 1 is_stmt 0 view .LVU34
 166 0000 FC01      		movw r30,r24
 167 0002 CB01      		movw r24,r22
 168               	.LVL14:
  68:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 169               		.loc 1 68 2 is_stmt 1 view .LVU35
 170               		.loc 1 68 6 is_stmt 0 view .LVU36
 171 0004 2EB3      		in r18,0x1e
 172               		.loc 1 68 5 view .LVU37
 173 0006 2430      		cpi r18,lo8(4)
 174 0008 01F4      		brne .L14
  69:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
  70:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
  71:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	Endpoint_SelectEndpoint(MIDIInterfaceInfo->Config.DataINEndpointNumber);
 175               		.loc 1 71 2 is_stmt 1 view .LVU38
 176 000a 2181      		ldd r18,Z+1
 177               	.LVL15:
 178               	.LBB47:
 179               	.LBI47:
 296:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 180               		.loc 2 296 23 view .LVU39
 181               	.LBB48:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 182               		.loc 2 299 6 view .LVU40
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 183               		.loc 2 299 12 is_stmt 0 view .LVU41
 184 000c 2093 E900 		sts 233,r18
 185               	.LVL16:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 186               		.loc 2 299 12 view .LVU42
 187               	.LBE48:
 188               	.LBE47:
  72:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  73:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (Endpoint_IsReadWriteAllowed())
 189               		.loc 1 73 2 is_stmt 1 view .LVU43
 190               	.LBB49:
 191               	.LBI49:
 356:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 192               		.loc 2 356 23 view .LVU44
 193               	.LBB50:
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 194               		.loc 2 358 5 view .LVU45
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 195               		.loc 2 358 14 is_stmt 0 view .LVU46
 196 0010 2091 E800 		lds r18,232
 197               	.LBE50:
 198               	.LBE49:
 199               		.loc 1 73 5 view .LVU47
 200 0014 25FD      		sbrc r18,5
 201 0016 00C0      		rjmp .L12
 202               	.LVL17:
 203               	.L13:
  74:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	{
  75:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		uint8_t ErrorCode;
  76:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		if ((ErrorCode = Endpoint_Write_Stream_LE(Event, sizeof(MIDI_EventPacket_t), NO_STREAM_CALLBACK))
  78:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
  79:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  80:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
  81:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  Endpoint_ClearIN();
  82:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	}
  83:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
  84:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	return ENDPOINT_RWSTREAM_NoError;
 204               		.loc 1 84 9 view .LVU48
 205 0018 80E0      		ldi r24,0
 206 001a 0895      		ret
 207               	.LVL18:
 208               	.L12:
 209               	.LBB51:
  75:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 210               		.loc 1 75 3 is_stmt 1 view .LVU49
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
 211               		.loc 1 77 3 view .LVU50
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
 212               		.loc 1 77 20 is_stmt 0 view .LVU51
 213 001c 50E0      		ldi r21,0
 214 001e 40E0      		ldi r20,0
 215 0020 64E0      		ldi r22,lo8(4)
 216 0022 70E0      		ldi r23,0
 217               	.LVL19:
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
 218               		.loc 1 77 20 view .LVU52
 219 0024 0E94 0000 		call Endpoint_Write_Stream_LE
 220               	.LVL20:
  77:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
 221               		.loc 1 77 6 view .LVU53
 222 0028 8111      		cpse r24,__zero_reg__
 223 002a 00C0      		rjmp .L10
  80:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  Endpoint_ClearIN();
 224               		.loc 1 80 3 is_stmt 1 view .LVU54
 225               	.LBB52:
 226               	.LBI52:
 356:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 227               		.loc 2 356 23 view .LVU55
 228               	.LBB53:
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 229               		.loc 2 358 5 view .LVU56
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 230               		.loc 2 358 14 is_stmt 0 view .LVU57
 231 002c 9091 E800 		lds r25,232
 232               	.LBE53:
 233               	.LBE52:
  80:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  Endpoint_ClearIN();
 234               		.loc 1 80 6 view .LVU58
 235 0030 892F      		mov r24,r25
 236               	.LVL21:
  80:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  Endpoint_ClearIN();
 237               		.loc 1 80 6 view .LVU59
 238 0032 8072      		andi r24,lo8(32)
 239 0034 95FD      		sbrc r25,5
 240 0036 00C0      		rjmp .L13
  81:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	}
 241               		.loc 1 81 5 is_stmt 1 view .LVU60
 242               	.LBB54:
 243               	.LBI54:
 451:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 244               		.loc 2 451 23 view .LVU61
 245               	.LBB55:
 454:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 246               		.loc 2 454 6 view .LVU62
 454:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 247               		.loc 2 454 13 is_stmt 0 view .LVU63
 248 0038 9091 E800 		lds r25,232
 249 003c 9E77      		andi r25,lo8(126)
 250 003e 9093 E800 		sts 232,r25
 458:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 251               		.loc 2 458 4 view .LVU64
 252 0042 0895      		ret
 253               	.LVL22:
 254               	.L14:
 458:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			
 255               		.loc 2 458 4 view .LVU65
 256               	.LBE55:
 257               	.LBE54:
 258               	.LBE51:
  69:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
 259               		.loc 1 69 11 view .LVU66
 260 0044 82E0      		ldi r24,lo8(2)
 261               	.LVL23:
 262               	.L10:
 263               	/* epilogue start */
  85:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** }
 264               		.loc 1 85 1 view .LVU67
 265 0046 0895      		ret
 266               		.cfi_endproc
 267               	.LFE68:
 269               		.section	.text.MIDI_Device_Flush,"ax",@progbits
 270               	.global	MIDI_Device_Flush
 272               	MIDI_Device_Flush:
 273               	.LVL24:
 274               	.LFB69:
  86:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  87:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** uint8_t MIDI_Device_Flush(USB_ClassInfo_MIDI_Device_t* const MIDIInterfaceInfo)
  88:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** {
 275               		.loc 1 88 1 is_stmt 1 view -0
 276               		.cfi_startproc
 277               	/* prologue: function */
 278               	/* frame size = 0 */
 279               	/* stack size = 0 */
 280               	.L__stack_usage = 0
 281               		.loc 1 88 1 is_stmt 0 view .LVU69
 282 0000 FC01      		movw r30,r24
  89:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 283               		.loc 1 89 2 is_stmt 1 view .LVU70
 284               		.loc 1 89 6 is_stmt 0 view .LVU71
 285 0002 8EB3      		in r24,0x1e
 286               	.LVL25:
 287               		.loc 1 89 5 view .LVU72
 288 0004 8430      		cpi r24,lo8(4)
 289 0006 01F4      		brne .L17
  90:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	  return ENDPOINT_RWSTREAM_DeviceDisconnected;
  91:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
  92:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	uint8_t ErrorCode;
 290               		.loc 1 92 2 is_stmt 1 view .LVU73
  93:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  94:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	Endpoint_SelectEndpoint(MIDIInterfaceInfo->Config.DataINEndpointNumber);
 291               		.loc 1 94 2 view .LVU74
 292 0008 8181      		ldd r24,Z+1
 293               	.LVL26:
 294               	.LBB56:
 295               	.LBI56:
 296:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 296               		.loc 2 296 23 view .LVU75
 297               	.LBB57:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 298               		.loc 2 299 6 view .LVU76
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 299               		.loc 2 299 12 is_stmt 0 view .LVU77
 300 000a 8093 E900 		sts 233,r24
 301               	.LVL27:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 302               		.loc 2 299 12 view .LVU78
 303               	.LBE57:
 304               	.LBE56:
  95:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
  96:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (Endpoint_BytesInEndpoint())
 305               		.loc 1 96 2 is_stmt 1 view .LVU79
 306               	.LBB58:
 307               	.LBI58:
 259:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 308               		.loc 2 259 27 view .LVU80
 309               	.LBB59:
 266:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 310               		.loc 2 266 6 view .LVU81
 266:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif
 311               		.loc 2 266 13 is_stmt 0 view .LVU82
 312 000e 8091 F200 		lds r24,242
 313               	.LBE59:
 314               	.LBE58:
 315               		.loc 1 96 5 view .LVU83
 316 0012 8823      		tst r24
 317 0014 01F0      		breq .L15
  97:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	{
  98:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		Endpoint_ClearIN();
 318               		.loc 1 98 3 is_stmt 1 view .LVU84
 319               	.LBB60:
 320               	.LBI60:
 451:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 321               		.loc 2 451 23 view .LVU85
 322               	.LBB61:
 454:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 323               		.loc 2 454 6 view .LVU86
 454:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 324               		.loc 2 454 13 is_stmt 0 view .LVU87
 325 0016 8091 E800 		lds r24,232
 326 001a 8E77      		andi r24,lo8(126)
 327 001c 8093 E800 		sts 232,r24
 328               	.LBE61:
 329               	.LBE60:
  99:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 100:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		if ((ErrorCode = Endpoint_WaitUntilReady()) != ENDPOINT_READYWAIT_NoError)
 330               		.loc 1 100 3 is_stmt 1 view .LVU88
 331               		.loc 1 100 20 is_stmt 0 view .LVU89
 332 0020 0C94 0000 		jmp Endpoint_WaitUntilReady
 333               	.LVL28:
 334               	.L17:
  90:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
 335               		.loc 1 90 11 view .LVU90
 336 0024 82E0      		ldi r24,lo8(2)
 337               	.L15:
 338               	/* epilogue start */
 101:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 		  return ErrorCode;
 102:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	}
 103:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 104:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	return ENDPOINT_READYWAIT_NoError;
 105:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** }
 339               		.loc 1 105 1 view .LVU91
 340 0026 0895      		ret
 341               		.cfi_endproc
 342               	.LFE69:
 344               		.section	.text.MIDI_Device_ReceiveEventPacket,"ax",@progbits
 345               	.global	MIDI_Device_ReceiveEventPacket
 347               	MIDI_Device_ReceiveEventPacket:
 348               	.LVL29:
 349               	.LFB70:
 106:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 107:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** bool MIDI_Device_ReceiveEventPacket(USB_ClassInfo_MIDI_Device_t* const MIDIInterfaceInfo,
 108:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c ****                                     MIDI_EventPacket_t* const Event)
 109:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** {
 350               		.loc 1 109 1 is_stmt 1 view -0
 351               		.cfi_startproc
 352               	/* prologue: function */
 353               	/* frame size = 0 */
 354               	/* stack size = 0 */
 355               	.L__stack_usage = 0
 356               		.loc 1 109 1 is_stmt 0 view .LVU93
 357 0000 FC01      		movw r30,r24
 358 0002 CB01      		movw r24,r22
 359               	.LVL30:
 110:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 360               		.loc 1 110 2 is_stmt 1 view .LVU94
 361               		.loc 1 110 6 is_stmt 0 view .LVU95
 362 0004 2EB3      		in r18,0x1e
 363               		.loc 1 110 5 view .LVU96
 364 0006 2430      		cpi r18,lo8(4)
 365 0008 01F0      		breq .L22
 366               	.L24:
 111:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	  return false;
 367               		.loc 1 111 11 view .LVU97
 368 000a 80E0      		ldi r24,0
 369 000c 0895      		ret
 370               	.L22:
 112:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
 113:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	Endpoint_SelectEndpoint(MIDIInterfaceInfo->Config.DataOUTEndpointNumber);
 371               		.loc 1 113 2 is_stmt 1 view .LVU98
 372 000e 2581      		ldd r18,Z+5
 373               	.LVL31:
 374               	.LBB62:
 375               	.LBI62:
 296:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 376               		.loc 2 296 23 view .LVU99
 377               	.LBB63:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 378               		.loc 2 299 6 view .LVU100
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 379               		.loc 2 299 12 is_stmt 0 view .LVU101
 380 0010 2093 E900 		sts 233,r18
 381               	.LVL32:
 299:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#endif			
 382               		.loc 2 299 12 view .LVU102
 383               	.LBE63:
 384               	.LBE62:
 114:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 115:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 385               		.loc 1 115 2 is_stmt 1 view .LVU103
 386               	.LBB64:
 387               	.LBI64:
 356:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 388               		.loc 2 356 23 view .LVU104
 389               	.LBB65:
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 390               		.loc 2 358 5 view .LVU105
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 391               		.loc 2 358 14 is_stmt 0 view .LVU106
 392 0014 2091 E800 		lds r18,232
 393               	.LBE65:
 394               	.LBE64:
 395               		.loc 1 115 5 view .LVU107
 396 0018 25FF      		sbrs r18,5
 397 001a 00C0      		rjmp .L24
 116:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	  return false;
 117:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 
 118:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	Endpoint_Read_Stream_LE(Event, sizeof(MIDI_EventPacket_t), NO_STREAM_CALLBACK);
 398               		.loc 1 118 2 is_stmt 1 view .LVU108
 399 001c 50E0      		ldi r21,0
 400 001e 40E0      		ldi r20,0
 401 0020 64E0      		ldi r22,lo8(4)
 402 0022 70E0      		ldi r23,0
 403               	.LVL33:
 404               		.loc 1 118 2 is_stmt 0 view .LVU109
 405 0024 0E94 0000 		call Endpoint_Read_Stream_LE
 406               	.LVL34:
 119:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
 120:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	if (!(Endpoint_IsReadWriteAllowed()))
 407               		.loc 1 120 2 is_stmt 1 view .LVU110
 408               	.LBB66:
 409               	.LBI66:
 356:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 410               		.loc 2 356 23 view .LVU111
 411               	.LBB67:
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 412               		.loc 2 358 5 view .LVU112
 358:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			}
 413               		.loc 2 358 14 is_stmt 0 view .LVU113
 414 0028 8091 E800 		lds r24,232
 415               	.LBE67:
 416               	.LBE66:
 417               		.loc 1 120 5 view .LVU114
 418 002c 85FD      		sbrc r24,5
 419 002e 00C0      		rjmp .L25
 121:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	  Endpoint_ClearOUT();
 420               		.loc 1 121 4 is_stmt 1 view .LVU115
 421               	.LBB68:
 422               	.LBI68:
 466:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 			{
 423               		.loc 2 466 23 view .LVU116
 424               	.LBB69:
 469:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 425               		.loc 2 469 6 view .LVU117
 469:LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Endpoint.h **** 				#else
 426               		.loc 2 469 13 is_stmt 0 view .LVU118
 427 0030 8091 E800 		lds r24,232
 428 0034 8B77      		andi r24,lo8(123)
 429 0036 8093 E800 		sts 232,r24
 430               	.L25:
 431               	.LBE69:
 432               	.LBE68:
 122:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	
 123:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** 	return true;
 433               		.loc 1 123 9 view .LVU119
 434 003a 81E0      		ldi r24,lo8(1)
 435               	/* epilogue start */
 124:LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.c **** }
 436               		.loc 1 124 1 view .LVU120
 437 003c 0895      		ret
 438               		.cfi_endproc
 439               	.LFE70:
 441               		.text
 442               	.Letext0:
 443               		.file 3 "/opt/homebrew/Cellar/avr-gcc@9/9.4.0_1/avr/include/stdint.h"
 444               		.file 4 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/Device.h"
 445               		.file 5 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/StdReq
 446               		.file 6 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/../LowLevel/../HighLevel/Device
 447               		.file 7 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../../HighLevel/USBTask.h"
 448               		.file 8 "LUFA-100807/LUFA/Drivers/USB/Class/Device/../Common/MIDI.h"
 449               		.file 9 "LUFA-100807/LUFA/Drivers/USB/Class/Device/MIDI.h"
DEFINED SYMBOLS
                            *ABS*:00000000 MIDI.c
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2      *ABS*:0000003e __SP_H__
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:3      *ABS*:0000003d __SP_L__
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:4      *ABS*:0000003f __SREG__
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:6      *ABS*:00000001 __zero_reg__
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:13     .text.MIDI_Device_ConfigureEndpoints:00000000 MIDI_Device_ConfigureEndpoints
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:17     .text.MIDI_Device_ConfigureEndpoints:00000000 .Loc.0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:18     .text.MIDI_Device_ConfigureEndpoints:00000000 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:19     .text.MIDI_Device_ConfigureEndpoints:00000000 .Loc.1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:41     .text.MIDI_Device_ConfigureEndpoints:0000000a .Loc.2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:42     .text.MIDI_Device_ConfigureEndpoints:0000000a .Loc.3
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:43     .text.MIDI_Device_ConfigureEndpoints:0000000a .Loc.4
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:45     .text.MIDI_Device_ConfigureEndpoints:0000000c .Loc.5
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:50     .text.MIDI_Device_ConfigureEndpoints:00000010 .Loc.6
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:51     .text.MIDI_Device_ConfigureEndpoints:00000010 .Loc.7
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:53     .text.MIDI_Device_ConfigureEndpoints:00000012 .Loc.8
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:55     .text.MIDI_Device_ConfigureEndpoints:00000014 .Loc.9
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:58     .text.MIDI_Device_ConfigureEndpoints:00000018 .Loc.10
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:59     .text.MIDI_Device_ConfigureEndpoints:00000018 .Loc.11
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:65     .text.MIDI_Device_ConfigureEndpoints:00000020 .Loc.12
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:73     .text.MIDI_Device_ConfigureEndpoints:00000024 .Loc.13
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:75     .text.MIDI_Device_ConfigureEndpoints:00000024 .Loc.14
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:76     .text.MIDI_Device_ConfigureEndpoints:00000024 .Loc.15
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:79     .text.MIDI_Device_ConfigureEndpoints:00000028 .Loc.16
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:88     .text.MIDI_Device_ConfigureEndpoints:00000032 .Loc.17
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:92     .text.MIDI_Device_ConfigureEndpoints:00000036 .Loc.18
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:95     .text.MIDI_Device_ConfigureEndpoints:00000038 .Loc.19
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:99     .text.MIDI_Device_ConfigureEndpoints:0000003a .Loc.20
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:103    .text.MIDI_Device_ConfigureEndpoints:0000003e .Loc.21
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:106    .text.MIDI_Device_ConfigureEndpoints:0000003e .Loc.22
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:107    .text.MIDI_Device_ConfigureEndpoints:0000003e .Loc.23
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:111    .text.MIDI_Device_ConfigureEndpoints:00000042 .Loc.24
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:120    .text.MIDI_Device_ConfigureEndpoints:0000004a .Loc.25
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:122    .text.MIDI_Device_ConfigureEndpoints:0000004a .Loc.26
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:123    .text.MIDI_Device_ConfigureEndpoints:0000004a .Loc.27
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:126    .text.MIDI_Device_ConfigureEndpoints:0000004e .Loc.28
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:134    .text.MIDI_Device_ConfigureEndpoints:0000005c .Loc.29
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:137    .text.MIDI_Device_ConfigureEndpoints:0000005c .Loc.30
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:142    .text.MIDI_Device_ConfigureEndpoints:00000060 .Loc.31
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:146    .text.MIDI_Device_ConfigureEndpoints:00000064 .Loc.32
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:150    .text.MIDI_Device_ConfigureEndpoints:0000006a L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:156    .text.MIDI_Device_SendEventPacket:00000000 MIDI_Device_SendEventPacket
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:159    .text.MIDI_Device_SendEventPacket:00000000 .Loc.33
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:160    .text.MIDI_Device_SendEventPacket:00000000 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:165    .text.MIDI_Device_SendEventPacket:00000000 .Loc.34
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:169    .text.MIDI_Device_SendEventPacket:00000004 .Loc.35
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:170    .text.MIDI_Device_SendEventPacket:00000004 .Loc.36
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:172    .text.MIDI_Device_SendEventPacket:00000006 .Loc.37
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:175    .text.MIDI_Device_SendEventPacket:0000000a .Loc.38
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:180    .text.MIDI_Device_SendEventPacket:0000000c .Loc.39
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:182    .text.MIDI_Device_SendEventPacket:0000000c .Loc.40
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:183    .text.MIDI_Device_SendEventPacket:0000000c .Loc.41
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:186    .text.MIDI_Device_SendEventPacket:00000010 .Loc.42
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:189    .text.MIDI_Device_SendEventPacket:00000010 .Loc.43
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:192    .text.MIDI_Device_SendEventPacket:00000010 .Loc.44
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:194    .text.MIDI_Device_SendEventPacket:00000010 .Loc.45
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:195    .text.MIDI_Device_SendEventPacket:00000010 .Loc.46
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:199    .text.MIDI_Device_SendEventPacket:00000014 .Loc.47
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:204    .text.MIDI_Device_SendEventPacket:00000018 .Loc.48
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:210    .text.MIDI_Device_SendEventPacket:0000001c .Loc.49
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:211    .text.MIDI_Device_SendEventPacket:0000001c .Loc.50
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:212    .text.MIDI_Device_SendEventPacket:0000001c .Loc.51
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:218    .text.MIDI_Device_SendEventPacket:00000024 .Loc.52
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:221    .text.MIDI_Device_SendEventPacket:00000028 .Loc.53
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:224    .text.MIDI_Device_SendEventPacket:0000002c .Loc.54
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:227    .text.MIDI_Device_SendEventPacket:0000002c .Loc.55
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:229    .text.MIDI_Device_SendEventPacket:0000002c .Loc.56
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:230    .text.MIDI_Device_SendEventPacket:0000002c .Loc.57
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:234    .text.MIDI_Device_SendEventPacket:00000030 .Loc.58
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:237    .text.MIDI_Device_SendEventPacket:00000032 .Loc.59
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:241    .text.MIDI_Device_SendEventPacket:00000038 .Loc.60
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:244    .text.MIDI_Device_SendEventPacket:00000038 .Loc.61
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:246    .text.MIDI_Device_SendEventPacket:00000038 .Loc.62
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:247    .text.MIDI_Device_SendEventPacket:00000038 .Loc.63
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:251    .text.MIDI_Device_SendEventPacket:00000042 .Loc.64
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:255    .text.MIDI_Device_SendEventPacket:00000044 .Loc.65
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:259    .text.MIDI_Device_SendEventPacket:00000044 .Loc.66
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:264    .text.MIDI_Device_SendEventPacket:00000046 .Loc.67
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:266    .text.MIDI_Device_SendEventPacket:00000048 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:272    .text.MIDI_Device_Flush:00000000 MIDI_Device_Flush
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:275    .text.MIDI_Device_Flush:00000000 .Loc.68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:276    .text.MIDI_Device_Flush:00000000 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:281    .text.MIDI_Device_Flush:00000000 .Loc.69
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:283    .text.MIDI_Device_Flush:00000002 .Loc.70
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:284    .text.MIDI_Device_Flush:00000002 .Loc.71
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:287    .text.MIDI_Device_Flush:00000004 .Loc.72
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:290    .text.MIDI_Device_Flush:00000008 .Loc.73
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:291    .text.MIDI_Device_Flush:00000008 .Loc.74
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:296    .text.MIDI_Device_Flush:0000000a .Loc.75
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:298    .text.MIDI_Device_Flush:0000000a .Loc.76
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:299    .text.MIDI_Device_Flush:0000000a .Loc.77
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:302    .text.MIDI_Device_Flush:0000000e .Loc.78
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:305    .text.MIDI_Device_Flush:0000000e .Loc.79
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:308    .text.MIDI_Device_Flush:0000000e .Loc.80
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:310    .text.MIDI_Device_Flush:0000000e .Loc.81
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:311    .text.MIDI_Device_Flush:0000000e .Loc.82
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:315    .text.MIDI_Device_Flush:00000012 .Loc.83
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:318    .text.MIDI_Device_Flush:00000016 .Loc.84
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:321    .text.MIDI_Device_Flush:00000016 .Loc.85
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:323    .text.MIDI_Device_Flush:00000016 .Loc.86
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:324    .text.MIDI_Device_Flush:00000016 .Loc.87
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:330    .text.MIDI_Device_Flush:00000020 .Loc.88
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:331    .text.MIDI_Device_Flush:00000020 .Loc.89
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:335    .text.MIDI_Device_Flush:00000024 .Loc.90
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:339    .text.MIDI_Device_Flush:00000026 .Loc.91
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:341    .text.MIDI_Device_Flush:00000028 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:347    .text.MIDI_Device_ReceiveEventPacket:00000000 MIDI_Device_ReceiveEventPacket
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:350    .text.MIDI_Device_ReceiveEventPacket:00000000 .Loc.92
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:351    .text.MIDI_Device_ReceiveEventPacket:00000000 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:356    .text.MIDI_Device_ReceiveEventPacket:00000000 .Loc.93
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:360    .text.MIDI_Device_ReceiveEventPacket:00000004 .Loc.94
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:361    .text.MIDI_Device_ReceiveEventPacket:00000004 .Loc.95
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:363    .text.MIDI_Device_ReceiveEventPacket:00000006 .Loc.96
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:367    .text.MIDI_Device_ReceiveEventPacket:0000000a .Loc.97
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:371    .text.MIDI_Device_ReceiveEventPacket:0000000e .Loc.98
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:376    .text.MIDI_Device_ReceiveEventPacket:00000010 .Loc.99
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:378    .text.MIDI_Device_ReceiveEventPacket:00000010 .Loc.100
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:379    .text.MIDI_Device_ReceiveEventPacket:00000010 .Loc.101
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:382    .text.MIDI_Device_ReceiveEventPacket:00000014 .Loc.102
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:385    .text.MIDI_Device_ReceiveEventPacket:00000014 .Loc.103
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:388    .text.MIDI_Device_ReceiveEventPacket:00000014 .Loc.104
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:390    .text.MIDI_Device_ReceiveEventPacket:00000014 .Loc.105
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:391    .text.MIDI_Device_ReceiveEventPacket:00000014 .Loc.106
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:395    .text.MIDI_Device_ReceiveEventPacket:00000018 .Loc.107
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:398    .text.MIDI_Device_ReceiveEventPacket:0000001c .Loc.108
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:404    .text.MIDI_Device_ReceiveEventPacket:00000024 .Loc.109
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:407    .text.MIDI_Device_ReceiveEventPacket:00000028 .Loc.110
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:410    .text.MIDI_Device_ReceiveEventPacket:00000028 .Loc.111
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:412    .text.MIDI_Device_ReceiveEventPacket:00000028 .Loc.112
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:413    .text.MIDI_Device_ReceiveEventPacket:00000028 .Loc.113
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:417    .text.MIDI_Device_ReceiveEventPacket:0000002c .Loc.114
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:420    .text.MIDI_Device_ReceiveEventPacket:00000030 .Loc.115
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:423    .text.MIDI_Device_ReceiveEventPacket:00000030 .Loc.116
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:425    .text.MIDI_Device_ReceiveEventPacket:00000030 .Loc.117
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:426    .text.MIDI_Device_ReceiveEventPacket:00000030 .Loc.118
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:433    .text.MIDI_Device_ReceiveEventPacket:0000003a .Loc.119
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:436    .text.MIDI_Device_ReceiveEventPacket:0000003c .Loc.120
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:438    .text.MIDI_Device_ReceiveEventPacket:0000003e L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:153    .text.MIDI_Device_ConfigureEndpoints:0000006a L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:269    .text.MIDI_Device_SendEventPacket:00000048 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:344    .text.MIDI_Device_Flush:00000028 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:441    .text.MIDI_Device_ReceiveEventPacket:0000003e L0
                     .debug_frame:00000000 L0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:102    .text.MIDI_Device_ConfigureEndpoints:0000003e .L2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:140    .text.MIDI_Device_ConfigureEndpoints:00000060 .L1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:49     .text.MIDI_Device_ConfigureEndpoints:00000010 .L6
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:254    .text.MIDI_Device_SendEventPacket:00000044 .L14
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:208    .text.MIDI_Device_SendEventPacket:0000001c .L12
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:262    .text.MIDI_Device_SendEventPacket:00000046 .L10
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:203    .text.MIDI_Device_SendEventPacket:00000018 .L13
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:334    .text.MIDI_Device_Flush:00000024 .L17
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:337    .text.MIDI_Device_Flush:00000026 .L15
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:370    .text.MIDI_Device_ReceiveEventPacket:0000000e .L22
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:366    .text.MIDI_Device_ReceiveEventPacket:0000000a .L24
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:430    .text.MIDI_Device_ReceiveEventPacket:0000003a .L25
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:1458   .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2599   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2617   .debug_line:00000000 .Ldebug_line0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:349    .text.MIDI_Device_ReceiveEventPacket:00000000 .LFB70
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:439    .text.MIDI_Device_ReceiveEventPacket:0000003e .LFE70
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2062   .debug_loc:00000006 .LLST18
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2055   .debug_loc:00000000 .LVUS18
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2097   .debug_loc:00000042 .LLST19
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2090   .debug_loc:0000003c .LVUS19
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:375    .text.MIDI_Device_ReceiveEventPacket:00000010 .LBI62
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:374    .text.MIDI_Device_ReceiveEventPacket:00000010 .LBB62
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:384    .text.MIDI_Device_ReceiveEventPacket:00000014 .LBE62
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2128   .debug_loc:0000007a .LLST20
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2125   .debug_loc:00000078 .LVUS20
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:387    .text.MIDI_Device_ReceiveEventPacket:00000014 .LBI64
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:386    .text.MIDI_Device_ReceiveEventPacket:00000014 .LBB64
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:394    .text.MIDI_Device_ReceiveEventPacket:00000018 .LBE64
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:409    .text.MIDI_Device_ReceiveEventPacket:00000028 .LBI66
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:408    .text.MIDI_Device_ReceiveEventPacket:00000028 .LBB66
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:416    .text.MIDI_Device_ReceiveEventPacket:0000002c .LBE66
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:422    .text.MIDI_Device_ReceiveEventPacket:00000030 .LBI68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:421    .text.MIDI_Device_ReceiveEventPacket:00000030 .LBB68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:432    .text.MIDI_Device_ReceiveEventPacket:0000003a .LBE68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:406    .text.MIDI_Device_ReceiveEventPacket:00000028 .LVL34
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:274    .text.MIDI_Device_Flush:00000000 .LFB69
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:342    .text.MIDI_Device_Flush:00000028 .LFE69
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2144   .debug_loc:00000095 .LLST16
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2135   .debug_loc:0000008d .LVUS16
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:295    .text.MIDI_Device_Flush:0000000a .LBI56
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:294    .text.MIDI_Device_Flush:0000000a .LBB56
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:304    .text.MIDI_Device_Flush:0000000e .LBE56
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2184   .debug_loc:000000dd .LLST17
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2181   .debug_loc:000000db .LVUS17
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:307    .text.MIDI_Device_Flush:0000000e .LBI58
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:306    .text.MIDI_Device_Flush:0000000e .LBB58
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:314    .text.MIDI_Device_Flush:00000012 .LBE58
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:320    .text.MIDI_Device_Flush:00000016 .LBI60
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:319    .text.MIDI_Device_Flush:00000016 .LBB60
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:329    .text.MIDI_Device_Flush:00000020 .LBE60
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:333    .text.MIDI_Device_Flush:00000024 .LVL28
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:158    .text.MIDI_Device_SendEventPacket:00000000 .LFB68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:267    .text.MIDI_Device_SendEventPacket:00000048 .LFE68
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2206   .debug_loc:000000fe .LLST12
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2191   .debug_loc:000000f0 .LVUS12
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2281   .debug_loc:0000017e .LLST13
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2266   .debug_loc:00000170 .LVUS13
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:209    .text.MIDI_Device_SendEventPacket:0000001c .LBB51
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:258    .text.MIDI_Device_SendEventPacket:00000044 .LBE51
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2344   .debug_loc:000001f2 .LLST15
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2341   .debug_loc:000001f0 .LVUS15
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:226    .text.MIDI_Device_SendEventPacket:0000002c .LBI52
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:225    .text.MIDI_Device_SendEventPacket:0000002c .LBB52
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:233    .text.MIDI_Device_SendEventPacket:00000030 .LBE52
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:243    .text.MIDI_Device_SendEventPacket:00000038 .LBI54
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:242    .text.MIDI_Device_SendEventPacket:00000038 .LBB54
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:257    .text.MIDI_Device_SendEventPacket:00000044 .LBE54
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:220    .text.MIDI_Device_SendEventPacket:00000028 .LVL20
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:179    .text.MIDI_Device_SendEventPacket:0000000c .LBI47
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:178    .text.MIDI_Device_SendEventPacket:0000000c .LBB47
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:188    .text.MIDI_Device_SendEventPacket:00000010 .LBE47
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2354   .debug_loc:00000207 .LLST14
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2351   .debug_loc:00000205 .LVUS14
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:191    .text.MIDI_Device_SendEventPacket:00000010 .LBI49
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:190    .text.MIDI_Device_SendEventPacket:00000010 .LBB49
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:198    .text.MIDI_Device_SendEventPacket:00000014 .LBE49
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:15     .text.MIDI_Device_ConfigureEndpoints:00000000 .LFB67
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:151    .text.MIDI_Device_ConfigureEndpoints:0000006a .LFE67
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2361   .debug_loc:0000021a .LLST0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2407   .debug_loc:0000026f .LLST1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2394   .debug_loc:00000263 .LVUS1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:71     .text.MIDI_Device_ConfigureEndpoints:00000024 .LBI41
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2463   .debug_loc:000002d5 .LLST2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2460   .debug_loc:000002d3 .LVUS2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2474   .debug_loc:000002eb .LLST3
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2471   .debug_loc:000002e9 .LVUS3
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2484   .debug_loc:00000300 .LLST4
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2481   .debug_loc:000002fe .LVUS4
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2499   .debug_loc:0000031a .LLST5
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2496   .debug_loc:00000318 .LVUS5
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2512   .debug_loc:00000332 .LLST6
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2507   .debug_loc:0000032e .LVUS6
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:78     .text.MIDI_Device_ConfigureEndpoints:00000028 .LVL4
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:101    .text.MIDI_Device_ConfigureEndpoints:0000003e .LVL7
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:119    .text.MIDI_Device_ConfigureEndpoints:0000004a .LBI45
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:118    .text.MIDI_Device_ConfigureEndpoints:0000004a .LBB45
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:136    .text.MIDI_Device_ConfigureEndpoints:0000005c .LBE45
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2526   .debug_loc:00000352 .LLST7
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2523   .debug_loc:00000350 .LVUS7
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2537   .debug_loc:00000368 .LLST8
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2534   .debug_loc:00000366 .LVUS8
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2547   .debug_loc:0000037d .LLST9
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2544   .debug_loc:0000037b .LVUS9
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2562   .debug_loc:00000397 .LLST10
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2559   .debug_loc:00000395 .LVUS10
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2573   .debug_loc:000003ad .LLST11
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:2570   .debug_loc:000003ab .LVUS11
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:125    .text.MIDI_Device_ConfigureEndpoints:0000004e .LVL10
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:133    .text.MIDI_Device_ConfigureEndpoints:0000005c .LVL11
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:348    .text.MIDI_Device_ReceiveEventPacket:00000000 .LVL29
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:359    .text.MIDI_Device_ReceiveEventPacket:00000004 .LVL30
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:403    .text.MIDI_Device_ReceiveEventPacket:00000024 .LVL33
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:373    .text.MIDI_Device_ReceiveEventPacket:00000010 .LVL31
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:381    .text.MIDI_Device_ReceiveEventPacket:00000014 .LVL32
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:273    .text.MIDI_Device_Flush:00000000 .LVL24
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:286    .text.MIDI_Device_Flush:00000004 .LVL25
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:293    .text.MIDI_Device_Flush:0000000a .LVL26
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:301    .text.MIDI_Device_Flush:0000000e .LVL27
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:157    .text.MIDI_Device_SendEventPacket:00000000 .LVL13
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:168    .text.MIDI_Device_SendEventPacket:00000004 .LVL14
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:202    .text.MIDI_Device_SendEventPacket:00000018 .LVL17
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:207    .text.MIDI_Device_SendEventPacket:0000001c .LVL18
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:253    .text.MIDI_Device_SendEventPacket:00000044 .LVL22
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:261    .text.MIDI_Device_SendEventPacket:00000046 .LVL23
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:217    .text.MIDI_Device_SendEventPacket:00000024 .LVL19
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:236    .text.MIDI_Device_SendEventPacket:00000032 .LVL21
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:177    .text.MIDI_Device_SendEventPacket:0000000c .LVL15
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:185    .text.MIDI_Device_SendEventPacket:00000010 .LVL16
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:21     .text.MIDI_Device_ConfigureEndpoints:00000002 .LCFI0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:25     .text.MIDI_Device_ConfigureEndpoints:00000004 .LCFI1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:29     .text.MIDI_Device_ConfigureEndpoints:00000006 .LCFI2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:33     .text.MIDI_Device_ConfigureEndpoints:00000008 .LCFI3
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:14     .text.MIDI_Device_ConfigureEndpoints:00000000 .LVL0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:48     .text.MIDI_Device_ConfigureEndpoints:00000010 .LVL1
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:64     .text.MIDI_Device_ConfigureEndpoints:00000020 .LVL2
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:110    .text.MIDI_Device_ConfigureEndpoints:00000042 .LVL8
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:145    .text.MIDI_Device_ConfigureEndpoints:00000064 .LVL12
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:69     .text.MIDI_Device_ConfigureEndpoints:00000024 .LVL3
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:91     .text.MIDI_Device_ConfigureEndpoints:00000036 .LVL5
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:94     .text.MIDI_Device_ConfigureEndpoints:00000038 .LVL6
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:117    .text.MIDI_Device_ConfigureEndpoints:0000004a .LVL9
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:451    .debug_info:00000000 .Ldebug_info0
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:70     .text.MIDI_Device_ConfigureEndpoints:00000024 .LBB41
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:87     .text.MIDI_Device_ConfigureEndpoints:00000032 .LBE41
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:97     .text.MIDI_Device_ConfigureEndpoints:0000003a .LBB44
/var/folders/bq/146k_07x5pn0twfdhlrpxh7h0000gn/T//ccEWSVyk.s:105    .text.MIDI_Device_ConfigureEndpoints:0000003e .LBE44

UNDEFINED SYMBOLS
Endpoint_BytesToEPSizeMaskDynamic
Endpoint_ConfigureEndpoint_Prv
Endpoint_Write_Stream_LE
Endpoint_WaitUntilReady
Endpoint_Read_Stream_LE
